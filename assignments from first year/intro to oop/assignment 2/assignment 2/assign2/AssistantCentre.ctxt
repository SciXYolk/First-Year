#BlueJ class context
comment0.target=AssistantCentre
comment0.text=\r\n\ Keep\ track\ of\ multiple\ assistants.\r\n\ @author\ Berk\ Yildizcan\r\n\ @version\ 05/11/2022\r\n
comment1.params=
comment1.target=AssistantCentre()
comment1.text=\r\n\ Create\ a\ AssistantCentre\ object.\r\n
comment2.params=assistant
comment2.target=void\ addAssistant(Assistant)
comment2.text=\r\n\ Add\ a\ new\ assistant\ to\ the\ collection.\r\n\ @param\ assistant\ The\ assistant.\r\n
comment3.params=
comment3.target=int\ getNumberOfAssistants()
comment3.text=\r\n\ Get\ the\ number\ of\ assistants.\r\n\ @return\ the\ number\ of\ assistants\ in\ the\ collection.\r\n
comment4.params=location
comment4.target=int\ getNumberOfAssistants(int)
comment4.text=\r\n\ Get\ the\ number\ of\ assistants\ in\ the\ given\ location.\r\n\ @param\ location\ The\ location\ of\ the\ assistants.\r\n\ @return\ the\ number\ of\ assistants\ in\ the\ collection\r\n\ \ \ \ \ \ \ \ \ who\ in\ the\ given\ location.\r\n
comment5.params=
comment5.target=void\ list()
comment5.text=\r\n\ List\ all\ of\ the\ assistants,\ one\ per\ line.\r\n\ This\ uses\ the\ Assistant\ objects\u2019\ getDetails\r\n\ method\ to\ format\ the\ details.\r\n
comment6.params=identity\ location\ available
comment6.target=void\ setAvailability(int,\ int,\ boolean)
comment6.text=\r\n\ Set\ the\ availability\ of\ the\ assistant\ whose\ identity\ is\ given.\r\n\ @param\ id\ The\ assistant's\ identity.\r\n\ @param\ location\ The\ assistant's\ new\ location.\r\n\ @param\ available\ Whether\ they\ are\ now\ available\ or\ not.\r\n
comment7.params=identity
comment7.target=boolean\ removeAssistant(int)
comment7.text=\r\n\ Remove\ the\ assistant\ with\ the\ given\ identity.\r\n\ @param\ day\ The\ id\ of\ the\ assistant\ to\ be\ removed.\r\n\ @return\ true\ if\ an\ assistant\ was\ found\ and\ removed,\r\n\ \ \ \ \ \ \ \ \ false\ otherwise.\r\n
comment8.params=location
comment8.target=Assistant\ findNearestAvailable(int)
comment8.text=\r\n\ Find\ the\ nearest\ available\ assistant\ to\ the\ given\ location.\r\n\ Distance\ is\ measured\ by\ the\ absolute\ value\ of\ the\r\n\ difference\ between\ two\ locations.\r\n\ For\ instance,\ the\ distance\ between\ locations\ 1\ and\ 5\ is\ 4,\r\n\ and\ the\ distance\ between\ locations\ 6\ and\ 4\ is\ 2.\r\n\ If\ more\ than\ one\ assistant\ is\ available\ and\ nearest\ to\ the\ given\r\n\ location\ then\ the\ one\ with\ the\ lowest\ identity\ must\ be\ returned.\r\n\ @param\ location\ Look\ for\ the\ assistant\ nearest\ to\ this\ location.\r\n\ @return\ the\ nearest\ assistant,\ or\ null\ if\ there\ are\ no\ available\ assistants.\r\n
numComments=9
