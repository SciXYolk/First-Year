#BlueJ class context
comment0.target=EventTest
comment0.text=\r\n\ The\ test\ class\ EventTest.\r\n\ Assumptions\:\r\n\ \ \ \ \ +\ The\ constructor's\ parameters\ are\ in\ the\ order\:\ eventName,\ roomName,\ capacity.\r\n\ \ \ \ \ +\ The\ setters\ are\ called\:\ getEventName,\ getRoomName,\ getCapacity\ and\ getRegistrations.\r\n\r\n\ @author\ \ David\ J.\ Barnes\r\n\ @version\ 2022.10.20\r\n
comment1.params=
comment1.target=void\ reflectionTest()
comment10.params=
comment10.target=void\ testDeregister2()
comment11.params=
comment11.target=void\ testFillAndEmpty()
comment12.params=
comment12.target=void\ testDeregisterEmptyEvent()
comment13.params=
comment13.target=void\ testBiggerRoom1()
comment13.text=\r\n\ Test\ changing\ for\ a\ bigger\ room.\r\n
comment14.params=
comment14.target=void\ testOtherRoom1()
comment14.text=\r\n\ Test\ changing\ for\ another\ room\ that\ has\ enough\ space.\r\n
comment15.params=
comment15.target=void\ testOtherRoom2()
comment15.text=\r\n\ Test\ changing\ for\ another\ room\ that\ has\ enough\ space.\r\n
comment16.params=
comment16.target=void\ testSmallerRoom()
comment16.text=\r\n\ Test\ changing\ for\ another\ room\ that\ does\ not\ have\ enough\ space.\r\n
comment17.params=
comment17.target=void\ testIsSpace1()
comment18.params=
comment18.target=void\ testIsSpace2()
comment19.params=
comment19.target=void\ testIsSpace3()
comment2.params=
comment2.target=EventTest()
comment2.text=\r\n\ Default\ constructor\ for\ test\ class\ EventTest\r\n
comment20.params=
comment20.target=void\ testIsSpaceGroupSize0()
comment21.params=
comment21.target=void\ testIsSpaceGroupSizeNegative()
comment22.params=
comment22.target=void\ testPrintEventDetails()
comment23.params=
comment23.target=void\ cleanOutput()
comment23.text=\r\n\ Check\ that\ nothing\ was\ output.\r\n
comment24.params=
comment24.target=Event\ createEvent()
comment24.text=\r\n\ Create\ an\ event\ with\ random\ elements.\r\n\ NB\:\ The\ assumption\ is\ that\ the\ constructor's\ arguments\r\n\ are\ in\ the\ order\:\ event\ name,\ room\ name,\ room\ capacity.\r\n\ @return\ the\ event.\r\n
comment25.params=capacity
comment25.target=Event\ createEvent(int)
comment25.text=\r\n\ Create\ an\ event\ in\ a\ room\ with\ the\ given\ capacity.\r\n\ @param\ capacity\ The\ room's\ capacity.\r\n\ @return\ the\ event.\r\n
comment26.params=
comment26.target=void\ testClassName()
comment26.text=\r\n\ Test\ for\ the\ correct\ class\ name.\r\n
comment27.params=
comment27.target=void\ testFields()
comment27.text=\r\n\ Test\ for\ the\ correct\ fields.\r\n
comment28.params=
comment28.target=void\ testMethods()
comment28.text=\r\n\ Test\ for\ the\ correct\ methods.\r\n
comment3.params=
comment3.target=void\ setUp()
comment3.text=\r\n\ Sets\ up\ the\ test\ fixture.\r\n\r\n\ Called\ before\ every\ test\ case\ method.\r\n
comment4.params=
comment4.target=void\ tearDown()
comment4.text=\r\n\ Tears\ down\ the\ test\ fixture.\r\n\r\n\ Called\ after\ every\ test\ case\ method.\r\n
comment5.params=
comment5.target=void\ testInitialState()
comment6.params=
comment6.target=void\ testRegister1()
comment7.params=
comment7.target=void\ testRegisterFill()
comment8.params=
comment8.target=void\ testRegisterOverfill()
comment9.params=
comment9.target=void\ testDeregister1()
numComments=29
